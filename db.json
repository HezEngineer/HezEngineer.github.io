{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/material/source/css/duoshuo.css","path":"css/duoshuo.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/gallery.min.css","path":"css/gallery.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/duoshuo.min.css","path":"css/duoshuo.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/ie-blocker.css","path":"css/ie-blocker.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/uc.css","path":"css/uc.css","modified":1,"renderable":1},{"_id":"themes/material/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/bg.png","path":"img/bg.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/sidebar_header.png","path":"img/sidebar_header.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/upyun_logo.png","path":"img/upyun_logo.png","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","path":"fonts/MaterialIcons-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","path":"fonts/MaterialIcons-Regular.woff","modified":1,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","path":"js/ie-blocker.zhCN.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.en.js","path":"js/ie-blocker.en.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/queue.js","path":"js/queue.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/nprogress.js","path":"js/nprogress.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/ripple.js","path":"js/ripple.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/smoothscroll.js","path":"js/smoothscroll.js","modified":1,"renderable":1},{"_id":"themes/material/source/css/material.min.css","path":"css/material.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/material/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/material/source/img/daily_pic.png","path":"img/daily_pic.png","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","path":"fonts/MaterialIcons-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/material/source/js/js.js","path":"js/js.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/js.min.js","path":"js/js.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/css/material.css","path":"css/material.css","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-facebook.png","path":"img/footer/footer_ico-facebook.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-github.png","path":"img/footer/footer_ico-github.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-gplus.png","path":"img/footer/footer_ico-gplus.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.png","path":"img/footer/footer_ico-linkedin.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-instagram.png","path":"img/footer/footer_ico-instagram.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-telegram.png","path":"img/footer/footer_ico-telegram.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.png","path":"img/footer/footer_ico-tumblr.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-twitter.png","path":"img/footer/footer_ico-twitter.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-weibo.png","path":"img/footer/footer_ico-weibo.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.png","path":"img/footer/footer_ico-zhihu.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/gallery/arrow.svg","path":"img/gallery/arrow.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/gallery/close.svg","path":"img/gallery/close.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/gallery/spinner.svg","path":"img/gallery/spinner.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.png","path":"img/footer/footer_ico-bilibili.png","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","path":"fonts/MaterialIcons-Regular.eot","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/js/gallery/jquery.poptrox.min.js","path":"js/gallery/jquery.poptrox.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/gallery/jquery.scrollstop.min.js","path":"js/gallery/jquery.scrollstop.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/gallery/skel.min.js","path":"js/gallery/skel.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/gallery/main.min.js","path":"js/gallery/main.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/js/gallery/util.min.js","path":"js/gallery/util.min.js","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-13.png","path":"img/random/material-13.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-15.png","path":"img/random/material-15.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-16.png","path":"img/random/material-16.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-17.png","path":"img/random/material-17.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-4.png","path":"img/random/material-4.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-6.png","path":"img/random/material-6.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-10.png","path":"img/random/material-10.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-12.png","path":"img/random/material-12.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-3.png","path":"img/random/material-3.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-9.png","path":"img/random/material-9.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-11.png","path":"img/random/material-11.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-19.png","path":"img/random/material-19.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-8.png","path":"img/random/material-8.png","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-1.png","path":"img/random/material-1.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-2.png","path":"img/random/material-2.png","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","path":"fonts/Roboto-Black.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","path":"fonts/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","path":"fonts/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","path":"fonts/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","path":"fonts/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","path":"fonts/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-7.png","path":"img/random/material-7.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-18.png","path":"img/random/material-18.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-5.png","path":"img/random/material-5.png","modified":1,"renderable":1},{"_id":"themes/material/source/img/random/material-14.png","path":"img/random/material-14.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/material/.eslintrc.json","hash":"f4cdab9b046c8ff4860c1962d3e58c41801ee0fc","modified":1490509955333},{"_id":"themes/material/.gitignore","hash":"d96751b25658fcf869a836543d2c23507f97b5e4","modified":1490509955342},{"_id":"themes/material/.travis.yml","hash":"639b4687fa0c080b419405136a5081603a83b6c0","modified":1490509955345},{"_id":"themes/material/CONTRIBUTING.md","hash":"502dc2e3887b9667b898709c3aab649884f3fdfa","modified":1490509955348},{"_id":"themes/material/CONTRIBUTING.zh-cn.md","hash":"84b5b1d1b77b0ec4e49ebb1a773965ac7c19ba7e","modified":1490509955351},{"_id":"themes/material/LICENSE","hash":"2ea9f02239dc6b5fdbfff01fcdf85bcc8c13667c","modified":1490509955356},{"_id":"themes/material/README.md","hash":"72f797cf47273493aa4ffbae21f2d4ab7795be9e","modified":1490509955359},{"_id":"themes/material/_config.template.yml","hash":"b5d45b68ec7bcc7192101f189b0b0bb9a9d818e6","modified":1490509955362},{"_id":"themes/material/_config.yml","hash":"6018d7bebe3d9b9e85ebc5217483efe1c96483a3","modified":1490511200586},{"_id":"themes/material/contributing.json","hash":"f6f039672fef8e0267d9586c73d1a425c6c882d8","modified":1490509955366},{"_id":"themes/material/lint.sh","hash":"7d8c693175cf06c5de1dc0b964e13b2f052e6743","modified":1490509955854},{"_id":"themes/material/package.json","hash":"346698ee335bb1e392252e0559f4eb232bec189c","modified":1490509955856},{"_id":"source/_posts/TextView的drawable属性.md","hash":"78e3a559f4fa9d0e776db39251a3ecc5269b89e8","modified":1490501144010},{"_id":"source/_posts/training-Graphics-Animation-Bitmaps-1.md","hash":"343eada2014ee048eb4dec4e7e0b02089db0e56e","modified":1490501144015},{"_id":"source/_posts/博客搭建-hexo-Github-多机同步.md","hash":"b78741b69da5c6eb7146425aefa460650ef37913","modified":1490511237096},{"_id":"themes/material/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1490509955314},{"_id":"themes/material/.git/config","hash":"7f8f7c4b6a720242e67dcf733b8111edbdb7f889","modified":1490509955324},{"_id":"themes/material/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1490509809327},{"_id":"themes/material/.git/index","hash":"7237888b481caaeccedf79146d6ebd11a198bcc4","modified":1490510172336},{"_id":"themes/material/.git/packed-refs","hash":"98cb4ce2d816e04c4f78eeb07b9512d8b4b066a1","modified":1490509955303},{"_id":"themes/material/.github/ISSUE_TEMPLATE.md","hash":"db9ad5beabfa2b941f228b64df3e9f078579647d","modified":1490509955336},{"_id":"themes/material/.github/PULL_REQUEST_TEMPLATE.md","hash":"89a30224fc7403ebb9206ac8eb9bb25c3561d253","modified":1490509955340},{"_id":"themes/material/languages/ar.yml","hash":"bc354f297755815a33a7600301dd73c5c7808b26","modified":1490509955368},{"_id":"themes/material/languages/de.yml","hash":"61e64bacaad5976d37d677d72bec059f72b1c938","modified":1490509955371},{"_id":"themes/material/languages/en.yml","hash":"d29583bc9e2123a8817fff09fb624990d84aed69","modified":1490509955373},{"_id":"themes/material/languages/es.yml","hash":"439865de1856a2143b4d12dbb1bcd0068478de02","modified":1490509955376},{"_id":"themes/material/languages/fr.yml","hash":"4302fbb571340bbc127decb93ce826c5c94d7e72","modified":1490509955378},{"_id":"themes/material/languages/ja.yml","hash":"3f57faa091d834cafdcb1b250c34cf2f70b2131e","modified":1490509955382},{"_id":"themes/material/languages/ms.yml","hash":"b2bc540e75b119e121f9eeaf4512da97e39f75d8","modified":1490509955384},{"_id":"themes/material/languages/pt-BR.yml","hash":"be6b90b8821963f2fa2da8b720617073f42c6c28","modified":1490509955386},{"_id":"themes/material/languages/zh-CN.yml","hash":"5f3ace6fd9195f1adafa1d469d7f2f9da0c7983b","modified":1490509955389},{"_id":"themes/material/languages/zh-TW.yml","hash":"25e9c0817810dc83cf7c079156ee31bd3670ad7e","modified":1490509955391},{"_id":"themes/material/layout/index.ejs","hash":"0941c59ddcbc7856b1b5953d43c15f0186dd5e38","modified":1490509955810},{"_id":"themes/material/layout/layout.ejs","hash":"5d54f9fbf8f3d3b5b98f7df6bf1742e0dc88475e","modified":1490509955828},{"_id":"themes/material/layout/post.ejs","hash":"d22b3c9cdecd63ddb8c2d74c57cca25522bf2041","modified":1490509955851},{"_id":"themes/material/layout/_partial/Isolation-post-info.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490509955392},{"_id":"themes/material/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1490509809328},{"_id":"themes/material/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1490509809332},{"_id":"themes/material/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1490509809331},{"_id":"themes/material/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1490509809328},{"_id":"themes/material/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1490509809333},{"_id":"themes/material/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1490509809333},{"_id":"themes/material/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1490509809334},{"_id":"themes/material/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1490509809334},{"_id":"themes/material/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1490509809335},{"_id":"themes/material/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1490509809335},{"_id":"themes/material/.git/logs/HEAD","hash":"d377a616d3e4a04fa8388fa82d16557014e1d9ad","modified":1490509955319},{"_id":"themes/material/layout/_partial/Isolation-post_entry.ejs","hash":"62a2e2abd9282b7d47f4bfb11f5fd4aaff2ad4f7","modified":1490509955402},{"_id":"themes/material/layout/_partial/Paradox-post-info.ejs","hash":"471a445f57080a804071ff2c48356da5ff8a3d5d","modified":1490509955411},{"_id":"themes/material/layout/_partial/Paradox-post-thumbnail.ejs","hash":"4c12ceb81c83fed5f7e7e89dbde2af9d548a7837","modified":1490509955415},{"_id":"themes/material/layout/_partial/Paradox-post_entry-thumbnail.ejs","hash":"e904df50a90823f774e32b831455a01ee1d354e2","modified":1490509955420},{"_id":"themes/material/layout/_partial/Paradox-post_entry.ejs","hash":"5cde96b45f7a7e11ce5930ae68f4543b74fdf9f5","modified":1490509955433},{"_id":"themes/material/layout/_partial/Paradox-search.ejs","hash":"a53365c8a50db079eb6602350aa3f53d3712797d","modified":1490509955440},{"_id":"themes/material/layout/_partial/blog_info.ejs","hash":"02b367ba76e1a39788466d51f0a6bfff2a34283c","modified":1490509955462},{"_id":"themes/material/layout/_partial/comment.ejs","hash":"27468476bff349b4dc8c973ebe1cf2ecd68972c2","modified":1490509955469},{"_id":"themes/material/layout/_partial/config_css.ejs","hash":"0b159f3dd9378e023d685cc25c25de42bf9e1e90","modified":1490509955476},{"_id":"themes/material/layout/_partial/daily_pic.ejs","hash":"bec0dfa67f67041ffed06e3f6ab2d0e33382756b","modified":1490509955483},{"_id":"themes/material/layout/_partial/footer-left.ejs","hash":"d46a577253c61eb152c59ab2f51a26d4ba7f805a","modified":1490509955485},{"_id":"themes/material/layout/_partial/footer-option.ejs","hash":"57aae4531031f07d48bdea26bd6027b143cad122","modified":1490509955500},{"_id":"themes/material/layout/_partial/footer.ejs","hash":"08b37548a1dccf671289c642ad43b24e37a78c5a","modified":1490509955508},{"_id":"themes/material/layout/_partial/footer_top.ejs","hash":"eabe53e9d9341101be6529d6331c617864a59b0d","modified":1490509955510},{"_id":"themes/material/layout/_partial/head.ejs","hash":"2ccc59ded8a5bae9cf4c05caef747d33855f28e1","modified":1490509955552},{"_id":"themes/material/layout/_partial/import_js.ejs","hash":"e39a1759677ce494bc3ab891e97da151e3228f3c","modified":1490509955570},{"_id":"themes/material/layout/_partial/isolate-sns_list.ejs","hash":"74de1f8ef14b58c21eb7895e9c9b3f3080d40aa4","modified":1490509955574},{"_id":"themes/material/layout/_partial/isolate_info.ejs","hash":"81f47a927ca4ffebf7768aa63c59523a792990de","modified":1490509955582},{"_id":"themes/material/layout/_partial/post-content.ejs","hash":"b5c4974ebd0038a52b7572ce9eeb8a9452fc943b","modified":1490509955587},{"_id":"themes/material/layout/_partial/post-header.ejs","hash":"6e9b69fcb444cfc369653d7062721c92b0c04a94","modified":1490509955596},{"_id":"themes/material/layout/_partial/post-info-share.ejs","hash":"05520fdd12408d6ab96dfbe9323faae9187dbd5d","modified":1490509955623},{"_id":"themes/material/layout/_partial/post-nav.ejs","hash":"6b514c951b2535a0c1d22224c06856588ba18026","modified":1490509955625},{"_id":"themes/material/layout/_partial/sidebar-footer.ejs","hash":"4a8e5b9e67a898cbe4b67c474a25afc35bac03c0","modified":1490509955636},{"_id":"themes/material/layout/_partial/sidebar-footer_image.ejs","hash":"bb8eaf5fc538375b873489715765b9b27ec027d1","modified":1490509955642},{"_id":"themes/material/layout/_partial/sidebar-header.ejs","hash":"b64ac5d04ddbe8a8c42b7aaf10e9fddec3a2e109","modified":1490509955644},{"_id":"themes/material/layout/_partial/sidebar-navigation.ejs","hash":"8890efd1d0b04ea6ad7878ecb8b5196677bf1790","modified":1490509955675},{"_id":"themes/material/layout/_partial/sidebar.ejs","hash":"e3c5c28ffadbca227345e65bc93a16bd313d86cc","modified":1490509955682},{"_id":"themes/material/layout/_partial/toc_button.ejs","hash":"ca942077328a6a28212903b19e85e95453a1c2bb","modified":1490509955688},{"_id":"themes/material/layout/_widget/disqus.ejs","hash":"4b97c6f6ee7b071f2894791f76a9b61a331ce68a","modified":1490509955696},{"_id":"themes/material/layout/_widget/disqus_click.ejs","hash":"77f046a89e9e4da7176e402ee46d35a359f317c7","modified":1490509955707},{"_id":"themes/material/layout/_widget/duoshuo.ejs","hash":"a978124593ea5cf17099127e7fa35c451a53a43e","modified":1490509955712},{"_id":"themes/material/layout/_widget/leancloud-like.ejs","hash":"5483f0c8b753e171400d9c27a585de6de890c8ba","modified":1490509955722},{"_id":"themes/material/layout/_widget/leancloud-views.ejs","hash":"69f5f3b2a9a2c84f0c8b424a412ef354cb0481a7","modified":1490509955733},{"_id":"themes/material/layout/_widget/leancloud-views_num.ejs","hash":"a5ce35f2a456dc424e09b7e105b8d789dfe008df","modified":1490509955735},{"_id":"themes/material/layout/_widget/mathjax.ejs","hash":"2bdb6a28eab0cbee9a95c0b6ee7ed2ea3795cd14","modified":1490509955742},{"_id":"themes/material/layout/_widget/nprogress.ejs","hash":"d4a4295481f4acce5257c54387f89191d174439b","modified":1490509955747},{"_id":"themes/material/layout/_widget/page-gallery.ejs","hash":"c74d3738e7eed7bd1e19f40a50826c5b004d2fff","modified":1490509955760},{"_id":"themes/material/layout/_widget/page-links.ejs","hash":"ae562eea1b432e44927a999381c9c2c43d5c1cc4","modified":1490509955767},{"_id":"themes/material/layout/_widget/page-tagcloud.ejs","hash":"d080683e457fc9b5501d9c1d25b900cdcd4d147e","modified":1490509955773},{"_id":"themes/material/layout/_widget/search-local-js.ejs","hash":"af18b4dec62e463c52c612e89afe5ed81e24daf5","modified":1490509955784},{"_id":"themes/material/layout/_widget/search-swiftype-js.ejs","hash":"ff3a8bebfaf298cd362b9bb13639bfacf4c8e380","modified":1490509955790},{"_id":"themes/material/source/css/duoshuo.css","hash":"7372200a8d019d4c368283de089d2e0481cb1de7","modified":1490509955859},{"_id":"themes/material/source/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1490509955865},{"_id":"themes/material/source/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1490509955862},{"_id":"themes/material/source/css/ie-blocker.css","hash":"121016e89d5f8b1f84f2e0a22da30f3c096de36e","modified":1490509955868},{"_id":"themes/material/source/css/uc.css","hash":"fdd08a03390256c5b89e38cad6e53228a49f02e1","modified":1490509955887},{"_id":"themes/material/source/img/avatar.png","hash":"bf483b0d495dbbcfb308348a945818e1c1cc9696","modified":1490509956001},{"_id":"themes/material/source/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1490509956005},{"_id":"themes/material/source/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1490509956010},{"_id":"themes/material/source/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1490509956025},{"_id":"themes/material/source/img/sidebar_header.png","hash":"c47f4d39f421c0a950279d050ae82f9ae6dd19ff","modified":1490509956072},{"_id":"themes/material/source/img/upyun_logo.png","hash":"aee4e90c4e2e72ef7036668c52dabcd8d028ee2f","modified":1490509956073},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1490509955913},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1490509955909},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","hash":"198ffa1583343a5b5bf5e52afcfbff96fd0ef569","modified":1490509956140},{"_id":"themes/material/source/js/ie-blocker.en.js","hash":"0bbd768e3be0081cf8d3fc3a9568c6a0f951ada7","modified":1490509956131},{"_id":"themes/material/source/js/lazyload.min.js","hash":"bccbdcb5e5c13543dc5cc764073e3a454739d458","modified":1490509956233},{"_id":"themes/material/source/js/queue.js","hash":"60edffe70c2af21b6021705233851b04eb918808","modified":1490509956251},{"_id":"themes/material/source/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1490509956244},{"_id":"themes/material/source/js/ripple.js","hash":"8dcaf0761e65cbf5cddb5fa9f18e7f3e8eb8a6c6","modified":1490509956257},{"_id":"themes/material/source/js/smoothscroll.js","hash":"53204da28f2ccfd4af92511969319c574da1f7b5","modified":1490509956268},{"_id":"themes/material/source/css/material.min.css","hash":"f3c8e6a9d94e6cad30c6628e1d732e6ee00d5fce","modified":1490509955877},{"_id":"themes/material/source/css/style.css","hash":"ffaff241d583e34c8a3f5ab2773552d2f0d47c37","modified":1490509955881},{"_id":"themes/material/source/css/style.min.css","hash":"b35edebe6b687dc96b5480f031e6a940398baf26","modified":1490509955885},{"_id":"themes/material/source/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1490509956009},{"_id":"themes/material/source/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1490509955893},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1490509955906},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1490509955976},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1490509955997},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1490509956000},{"_id":"themes/material/source/js/js.js","hash":"7234923ae42ef5dfecc0566b51a82236131b8a6d","modified":1490509956190},{"_id":"themes/material/source/js/jquery.min.js","hash":"d0c03f4b0c3b72172804cbc5d19e44b3a0a9a171","modified":1490509956169},{"_id":"themes/material/source/js/js.min.js","hash":"a06e88ba0f594bc67be1618f9d0c203369d53700","modified":1490509956217},{"_id":"themes/material/.git/refs/heads/master","hash":"31a839785ec1255ef3c4738055d306f0532b1c1c","modified":1490509955317},{"_id":"themes/material/source/css/material.css","hash":"d67a90e8f30df9874155ba81cff9b0e84b7e67cf","modified":1490509955873},{"_id":"themes/material/source/img/footer/footer_ico-facebook.png","hash":"66f959829d878794e66fd0e40c0d6bd843cc0cde","modified":1490509956011},{"_id":"themes/material/source/img/footer/footer_ico-github.png","hash":"4488aa8fc794beaba3e4c80d1f1b9d6c218b31ab","modified":1490509956012},{"_id":"themes/material/source/img/footer/footer_ico-gplus.png","hash":"20971cbed2ebf58b9e3b087051f7fc56073da31d","modified":1490509956012},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.png","hash":"3d93bb435053b93243e3c259c448caf4ed00627e","modified":1490509956014},{"_id":"themes/material/source/img/footer/footer_ico-instagram.png","hash":"e8ec64e6f2639aec952e8e4d2944d5173f62e720","modified":1490509956013},{"_id":"themes/material/source/img/footer/footer_ico-telegram.png","hash":"1095c5279c498412ee314f4469768636e82148cb","modified":1490509956014},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.png","hash":"447421c1dcced081fa5fb0355421b7bc71fe3f76","modified":1490509956015},{"_id":"themes/material/source/img/footer/footer_ico-twitter.png","hash":"98b6529d3e08d5d086a4df85c20265c4517ec9a8","modified":1490509956015},{"_id":"themes/material/source/img/footer/footer_ico-weibo.png","hash":"8d46998b88f57a2d92effaa65e97ee36906396c2","modified":1490509956016},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.png","hash":"6b94cdb6e0a69e169baec6e22fe3a6e51b7ba4b5","modified":1490509956016},{"_id":"themes/material/source/img/gallery/arrow.svg","hash":"144d73877e52acc5068bc0c9d1e69ef450e69f26","modified":1490509956019},{"_id":"themes/material/source/img/gallery/close.svg","hash":"2690088060811f01c9360df75be80070156ff176","modified":1490509956021},{"_id":"themes/material/source/img/gallery/spinner.svg","hash":"fc9d1cd1118ac896d4f5326e110a653f3ea32b11","modified":1490509956024},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.png","hash":"f922bc4606f4ecb3ec2bc1b2bfa092643ffa2e37","modified":1490509956010},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1490509955900},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1490509955993},{"_id":"themes/material/source/js/gallery/jquery.poptrox.min.js","hash":"4b156b61a32467b6bf7766201b777d8949a74ee4","modified":1490509956082},{"_id":"themes/material/source/js/gallery/jquery.scrollstop.min.js","hash":"b3f8d996b7eb60fd9a0d6c216815ca970cb83863","modified":1490509956086},{"_id":"themes/material/source/js/gallery/skel.min.js","hash":"18a181affac3ac6dcb5e4504e56b14941f4f2185","modified":1490509956110},{"_id":"themes/material/source/js/gallery/main.min.js","hash":"83e3124ddb551ce1efe3d71ccdbb8deea0f99983","modified":1490509956095},{"_id":"themes/material/source/js/gallery/util.min.js","hash":"21f9de56727e235a83d514d08a65c7ef1b09c9e9","modified":1490509956121},{"_id":"themes/material/.git/objects/pack/pack-18df18d1aa86f4a605d645bd589fbbf175274437.idx","hash":"f6beea5697aa27b9ffcd3c616fd2fa91f8070949","modified":1490509955079},{"_id":"themes/material/source/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1490509956036},{"_id":"themes/material/source/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1490509956040},{"_id":"themes/material/source/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1490509956041},{"_id":"themes/material/source/img/random/material-17.png","hash":"9c463f96d4dadae4e67932c2d7ed1e353c4ecca8","modified":1490509956042},{"_id":"themes/material/source/img/random/material-4.png","hash":"171d9290b89a8e102d33f5a5c3f2d003cc20fe9f","modified":1490509956053},{"_id":"themes/material/source/img/random/material-6.png","hash":"29dd92b7c110bb6dfdfc2923c33f5d0895518001","modified":1490509956060},{"_id":"themes/material/.git/logs/refs/heads/master","hash":"d377a616d3e4a04fa8388fa82d16557014e1d9ad","modified":1490509955318},{"_id":"themes/material/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1490509955313},{"_id":"themes/material/source/img/random/material-10.png","hash":"021dca8d2477dae8f456a0cdc2725502d3b45785","modified":1490509956030},{"_id":"themes/material/source/img/random/material-12.png","hash":"ba0c8506af62f984da564e6e390f592475e51f2d","modified":1490509956035},{"_id":"themes/material/source/img/random/material-3.png","hash":"a7f86a309712b9bbb01a4b7b39b1ee429df9086a","modified":1490509956052},{"_id":"themes/material/source/img/random/material-9.png","hash":"bc4f1b42fd2d09a80ab5fef8c6066b5148db0749","modified":1490509956069},{"_id":"themes/material/source/img/random/material-11.png","hash":"637d4513d1e7beeb1e5179fa404b4b6ea61ca3dd","modified":1490509956033},{"_id":"themes/material/source/img/random/material-19.png","hash":"f0b5383ba5c7e91f711daaa6b3a520556b7ca14d","modified":1490509956047},{"_id":"themes/material/source/img/random/material-8.png","hash":"cb700661e312a5527aaf229517705adb1c1cead2","modified":1490509956067},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1490509955988},{"_id":"themes/material/.git/logs/refs/remotes/origin/HEAD","hash":"d377a616d3e4a04fa8388fa82d16557014e1d9ad","modified":1490509955311},{"_id":"themes/material/source/img/random/material-1.png","hash":"af4b0ad72ce30f3fd7f7435cd3267b9187335ffd","modified":1490509956028},{"_id":"themes/material/source/img/random/material-2.png","hash":"c5fc2ec66660f48be0fb092a872d4058e9d9e68f","modified":1490509956050},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1490509955921},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1490509955929},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1490509955937},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1490509955945},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1490509955962},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1490509955953},{"_id":"themes/material/source/img/random/material-7.png","hash":"e4aa6d4e1b52f1c097f61b5205d5b71a412e1d80","modified":1490509956064},{"_id":"themes/material/source/img/random/material-18.png","hash":"1d5bacea5d57cc3e652a7c697bcb4fbcb11e20dc","modified":1490509956045},{"_id":"themes/material/source/img/random/material-5.png","hash":"e26c197b3a765bbdcc966e4fb368c8808e9d655d","modified":1490509956058},{"_id":"themes/material/source/img/random/material-14.png","hash":"f6bd9ceca7deb32c45b02a5d89014c7ee4748833","modified":1490509956039},{"_id":"themes/material/.git/objects/pack/pack-18df18d1aa86f4a605d645bd589fbbf175274437.pack","hash":"dd1f26570d4413194c2609d7e4b047bf2800a4f0","modified":1490509955121},{"_id":"public/2017/03/26/博客搭建-hexo-Github-多机同步/index.html","hash":"a3c95c55ecd7079e178903805352190cb713b763","modified":1490511290734},{"_id":"public/2016/04/23/TextView的drawable属性/index.html","hash":"28803bc154d9e01d292b8e532d7858c7ca645185","modified":1490511290734},{"_id":"public/2016/04/01/training-Graphics-Animation-Bitmaps-1/index.html","hash":"1833c001676a716878dcbf993cf0d2a501959943","modified":1490511290735},{"_id":"public/archives/index.html","hash":"e62d47c9155bc81a48544630cd50704373026c53","modified":1490511290735},{"_id":"public/archives/2016/index.html","hash":"f89e9a14e608a4b0fffe588144005f1d7a620a4b","modified":1490511290735},{"_id":"public/archives/2016/04/index.html","hash":"5d2e03f84eb11a6d89f2e821a5f9f56d0441dfa1","modified":1490511290735},{"_id":"public/archives/2017/index.html","hash":"3721c709e74d9d416e5ac243264a394b2945e014","modified":1490511290735},{"_id":"public/archives/2017/03/index.html","hash":"3a8b80bc91bf3e4be6b511b61ae759f98ab33f30","modified":1490511290735},{"_id":"public/categories/android布局技巧/index.html","hash":"e6777040442eec828272e90197320deb5858a4f0","modified":1490511290735},{"_id":"public/categories/android/index.html","hash":"0a106924b8b6127975899e6b71d93f1fe4e7945f","modified":1490511290735},{"_id":"public/categories/博客/index.html","hash":"d335b0f9a4c1bc0b7ba2ba3ee5584c750decc488","modified":1490511290735},{"_id":"public/index.html","hash":"c9758812068c8dddfc4035fd2c822f383a64ef47","modified":1490511290735},{"_id":"public/tags/android布局技巧-TextView/index.html","hash":"6645e1f50b38d27aed6137386bac77bca78943e9","modified":1490511290735},{"_id":"public/tags/bitmap/index.html","hash":"00407092264b6d3064fb55c7576c93284cb0cecb","modified":1490511290735},{"_id":"public/tags/hexo/index.html","hash":"4c26a60a8019bc696e57565d58c4b08f233d4e15","modified":1490511290735},{"_id":"public/img/avatar.png","hash":"bf483b0d495dbbcfb308348a945818e1c1cc9696","modified":1490511290765},{"_id":"public/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1490511290765},{"_id":"public/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1490511290765},{"_id":"public/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1490511290765},{"_id":"public/img/sidebar_header.png","hash":"c47f4d39f421c0a950279d050ae82f9ae6dd19ff","modified":1490511290765},{"_id":"public/img/upyun_logo.png","hash":"aee4e90c4e2e72ef7036668c52dabcd8d028ee2f","modified":1490511290765},{"_id":"public/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1490511290765},{"_id":"public/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1490511290765},{"_id":"public/img/footer/footer_ico-facebook.png","hash":"66f959829d878794e66fd0e40c0d6bd843cc0cde","modified":1490511290765},{"_id":"public/img/footer/footer_ico-github.png","hash":"4488aa8fc794beaba3e4c80d1f1b9d6c218b31ab","modified":1490511290765},{"_id":"public/img/footer/footer_ico-gplus.png","hash":"20971cbed2ebf58b9e3b087051f7fc56073da31d","modified":1490511290765},{"_id":"public/img/footer/footer_ico-linkedin.png","hash":"3d93bb435053b93243e3c259c448caf4ed00627e","modified":1490511290765},{"_id":"public/img/footer/footer_ico-instagram.png","hash":"e8ec64e6f2639aec952e8e4d2944d5173f62e720","modified":1490511290765},{"_id":"public/img/footer/footer_ico-telegram.png","hash":"1095c5279c498412ee314f4469768636e82148cb","modified":1490511290765},{"_id":"public/img/footer/footer_ico-tumblr.png","hash":"447421c1dcced081fa5fb0355421b7bc71fe3f76","modified":1490511290765},{"_id":"public/img/footer/footer_ico-twitter.png","hash":"98b6529d3e08d5d086a4df85c20265c4517ec9a8","modified":1490511290766},{"_id":"public/img/footer/footer_ico-weibo.png","hash":"8d46998b88f57a2d92effaa65e97ee36906396c2","modified":1490511290766},{"_id":"public/img/footer/footer_ico-zhihu.png","hash":"6b94cdb6e0a69e169baec6e22fe3a6e51b7ba4b5","modified":1490511290766},{"_id":"public/img/gallery/arrow.svg","hash":"144d73877e52acc5068bc0c9d1e69ef450e69f26","modified":1490511290766},{"_id":"public/img/gallery/close.svg","hash":"2690088060811f01c9360df75be80070156ff176","modified":1490511290766},{"_id":"public/img/gallery/spinner.svg","hash":"fc9d1cd1118ac896d4f5326e110a653f3ea32b11","modified":1490511290766},{"_id":"public/img/footer/footer_ico-bilibili.png","hash":"f922bc4606f4ecb3ec2bc1b2bfa092643ffa2e37","modified":1490511290766},{"_id":"public/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1490511290776},{"_id":"public/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1490511290779},{"_id":"public/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1490511290781},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1490511290781},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1490511290781},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1490511290781},{"_id":"public/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1490511290781},{"_id":"public/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1490511290781},{"_id":"public/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1490511290781},{"_id":"public/img/random/material-17.png","hash":"9c463f96d4dadae4e67932c2d7ed1e353c4ecca8","modified":1490511290781},{"_id":"public/img/random/material-4.png","hash":"171d9290b89a8e102d33f5a5c3f2d003cc20fe9f","modified":1490511290781},{"_id":"public/img/random/material-6.png","hash":"29dd92b7c110bb6dfdfc2923c33f5d0895518001","modified":1490511290781},{"_id":"public/css/duoshuo.css","hash":"32a02eaa01ff7b66fd9df307b0d33d52810096be","modified":1490511290789},{"_id":"public/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1490511290789},{"_id":"public/css/ie-blocker.css","hash":"dddce7e6250a449291888ae7865697282a213b14","modified":1490511290789},{"_id":"public/css/uc.css","hash":"7609828f93973d1a6d3ba4b38d94688a92a6a6c5","modified":1490511290790},{"_id":"public/js/ie-blocker.zhCN.js","hash":"0ed49b0ec1d1924b128fbd97fca2cf7af7856fdf","modified":1490511290790},{"_id":"public/js/ie-blocker.en.js","hash":"96ca8e677a12048d099319ebdf01983ddc6ca80c","modified":1490511290790},{"_id":"public/js/ripple.js","hash":"2e30ec823a5922a4eb85490efa5591ea6dd78f50","modified":1490511290790},{"_id":"public/js/queue.js","hash":"a978181ac4938bac0b868e95cf19c84949d8d363","modified":1490511290790},{"_id":"public/js/lazyload.min.js","hash":"5348fd7aa4dbefac9d21091c9fd5e263563b5540","modified":1490511290790},{"_id":"public/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1490511290790},{"_id":"public/js/smoothscroll.js","hash":"df56a1c84191a62750ae820943377b6775fca0e2","modified":1490511290790},{"_id":"public/js/gallery/skel.min.js","hash":"a337cc51a3fb9953d306b3879e2e7676dd27ce53","modified":1490511290790},{"_id":"public/js/gallery/jquery.scrollstop.min.js","hash":"b3f8d996b7eb60fd9a0d6c216815ca970cb83863","modified":1490511290790},{"_id":"public/js/gallery/jquery.poptrox.min.js","hash":"ade2e2710565eebca01b68b9bfae4a4848d779aa","modified":1490511290790},{"_id":"public/js/gallery/main.min.js","hash":"83e3124ddb551ce1efe3d71ccdbb8deea0f99983","modified":1490511290790},{"_id":"public/js/gallery/util.min.js","hash":"21f9de56727e235a83d514d08a65c7ef1b09c9e9","modified":1490511290790},{"_id":"public/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1490511290790},{"_id":"public/css/material.min.css","hash":"f3c8e6a9d94e6cad30c6628e1d732e6ee00d5fce","modified":1490511290790},{"_id":"public/css/style.min.css","hash":"88b786f8ba6cd07253bd2afa30c7f0ea4b2331ac","modified":1490511290790},{"_id":"public/css/style.css","hash":"02ad5733c3c515ad29b41f45b10a8c67909254a6","modified":1490511290790},{"_id":"public/js/js.js","hash":"4634558bdb27ca5a2f728d6ff57590fbd91af6f1","modified":1490511290790},{"_id":"public/js/js.min.js","hash":"a06e88ba0f594bc67be1618f9d0c203369d53700","modified":1490511290790},{"_id":"public/js/jquery.min.js","hash":"00073d6597d2760b81387274a9ec56b9d5cb1552","modified":1490511290791},{"_id":"public/css/material.css","hash":"19818d637ecb3bae73d16ee90444c42fe4458b54","modified":1490511290791},{"_id":"public/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1490511290791},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1490511290791},{"_id":"public/img/random/material-10.png","hash":"021dca8d2477dae8f456a0cdc2725502d3b45785","modified":1490511290791},{"_id":"public/img/random/material-12.png","hash":"ba0c8506af62f984da564e6e390f592475e51f2d","modified":1490511290791},{"_id":"public/img/random/material-3.png","hash":"a7f86a309712b9bbb01a4b7b39b1ee429df9086a","modified":1490511290791},{"_id":"public/img/random/material-9.png","hash":"bc4f1b42fd2d09a80ab5fef8c6066b5148db0749","modified":1490511290791},{"_id":"public/img/random/material-11.png","hash":"637d4513d1e7beeb1e5179fa404b4b6ea61ca3dd","modified":1490511290797},{"_id":"public/img/random/material-19.png","hash":"f0b5383ba5c7e91f711daaa6b3a520556b7ca14d","modified":1490511290797},{"_id":"public/img/random/material-8.png","hash":"cb700661e312a5527aaf229517705adb1c1cead2","modified":1490511290798},{"_id":"public/img/random/material-1.png","hash":"af4b0ad72ce30f3fd7f7435cd3267b9187335ffd","modified":1490511290806},{"_id":"public/img/random/material-2.png","hash":"c5fc2ec66660f48be0fb092a872d4058e9d9e68f","modified":1490511290806},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1490511290812},{"_id":"public/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1490511290893},{"_id":"public/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1490511290893},{"_id":"public/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1490511290893},{"_id":"public/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1490511290894},{"_id":"public/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1490511290894},{"_id":"public/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1490511290894},{"_id":"public/img/random/material-7.png","hash":"e4aa6d4e1b52f1c097f61b5205d5b71a412e1d80","modified":1490511290895},{"_id":"public/img/random/material-18.png","hash":"1d5bacea5d57cc3e652a7c697bcb4fbcb11e20dc","modified":1490511290935},{"_id":"public/img/random/material-5.png","hash":"e26c197b3a765bbdcc966e4fb368c8808e9d655d","modified":1490511290935},{"_id":"public/img/random/material-14.png","hash":"f6bd9ceca7deb32c45b02a5d89014c7ee4748833","modified":1490511290956}],"Category":[{"name":"android布局技巧","_id":"cj0qbxs2q0002ysx8o8bma2np"},{"name":"android","_id":"cj0qbxs2z0005ysx8i0tu4kso"},{"name":"博客","_id":"cj0qbxs320009ysx819ttiuon"}],"Data":[],"Page":[],"Post":[{"title":"TextView的drawable属性","date":"2016-04-23T00:52:43.000Z","_content":"# what\n---\n实现Icon+文字在一个视觉元素的需求;\n### drawable属性\n* android:drawableLeft 图片在文字的左侧  \n* android:drawableTop 图片在文字的上方  \n* android:drawableRight 图片在文字的右侧  \n* android:drawableBottom 图片在文字的下方  \n* android:drawableStart 图片在文字的开始处 (API14才有,17生效)  \n* android:drawableBottom  图片在文字的结尾 (API14才有,17生效)  \n* android:drawablePadding 设置文字与图片之间的距离；  \n\n\n# how\n---\n\t\t<TextView\n      \t \t  android:id=\"@+id/plus_tv\"\n\t\t\t\t android:layout_width=\"400dp\"\n            android:layout_height=\"wrap_content\"\n       \t\t android:text=\"加分\"\n        \t android:textColor=\"@android:color/holo_blue_dark\"  \n        \t android:textSize=\"36sp\"\n        \t android:textStyle=\"bold\"\n        \t android:typeface=\"serif\"  \n       \t\t style=\"?buttonBarButtonStyle\"\n    \t\t   android:gravity=\"center_horizontal\"\n        \t android:drawableBottom=\"@drawable/ic_sentiment_dissatisfied_black_48dp\"\n        \t android:drawablePadding=\"20dp\"\n        \t android:drawableTint=\"@color/colorAccent\"/>  \n\n\n\n# question\n---\n### 注意的问题\n* gravity属性只对文字起作用  \n* drawable在其方向上居中显示；\n* 当TextView的宽高属性为wrap_content时，宽高取决于文字和图片的较宽或较高者；\n### 局限性\n* 当drawable的宽高不确定时；例如，drawable为shape时，shape的宽高取决于控件本身的高度；所以shape无法显示；  \n* 当需要对drawable进行单独控制时；\n\n参考资料: [使用TextView的drawable属性](http://toughcoder.net/blog/2015/05/20/android-layout-trick-drawable-of-textview/)\n","source":"_posts/TextView的drawable属性.md","raw":"---\ntitle: TextView的drawable属性\ndate: 2016-04-23 08:52:43\ntags: android布局技巧 TextView\ncategories: android布局技巧\n---\n# what\n---\n实现Icon+文字在一个视觉元素的需求;\n### drawable属性\n* android:drawableLeft 图片在文字的左侧  \n* android:drawableTop 图片在文字的上方  \n* android:drawableRight 图片在文字的右侧  \n* android:drawableBottom 图片在文字的下方  \n* android:drawableStart 图片在文字的开始处 (API14才有,17生效)  \n* android:drawableBottom  图片在文字的结尾 (API14才有,17生效)  \n* android:drawablePadding 设置文字与图片之间的距离；  \n\n\n# how\n---\n\t\t<TextView\n      \t \t  android:id=\"@+id/plus_tv\"\n\t\t\t\t android:layout_width=\"400dp\"\n            android:layout_height=\"wrap_content\"\n       \t\t android:text=\"加分\"\n        \t android:textColor=\"@android:color/holo_blue_dark\"  \n        \t android:textSize=\"36sp\"\n        \t android:textStyle=\"bold\"\n        \t android:typeface=\"serif\"  \n       \t\t style=\"?buttonBarButtonStyle\"\n    \t\t   android:gravity=\"center_horizontal\"\n        \t android:drawableBottom=\"@drawable/ic_sentiment_dissatisfied_black_48dp\"\n        \t android:drawablePadding=\"20dp\"\n        \t android:drawableTint=\"@color/colorAccent\"/>  \n\n\n\n# question\n---\n### 注意的问题\n* gravity属性只对文字起作用  \n* drawable在其方向上居中显示；\n* 当TextView的宽高属性为wrap_content时，宽高取决于文字和图片的较宽或较高者；\n### 局限性\n* 当drawable的宽高不确定时；例如，drawable为shape时，shape的宽高取决于控件本身的高度；所以shape无法显示；  \n* 当需要对drawable进行单独控制时；\n\n参考资料: [使用TextView的drawable属性](http://toughcoder.net/blog/2015/05/20/android-layout-trick-drawable-of-textview/)\n","slug":"TextView的drawable属性","published":1,"updated":"2017-03-26T04:05:44.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0qbxs2i0000ysx8rqm4pdbc","content":"<h1 id=\"what\"><a href=\"#what\" class=\"headerlink\" title=\"what\"></a>what</h1><hr>\n<p>实现Icon+文字在一个视觉元素的需求;</p>\n<h3 id=\"drawable属性\"><a href=\"#drawable属性\" class=\"headerlink\" title=\"drawable属性\"></a>drawable属性</h3><ul>\n<li>android:drawableLeft 图片在文字的左侧  </li>\n<li>android:drawableTop 图片在文字的上方  </li>\n<li>android:drawableRight 图片在文字的右侧  </li>\n<li>android:drawableBottom 图片在文字的下方  </li>\n<li>android:drawableStart 图片在文字的开始处 (API14才有,17生效)  </li>\n<li>android:drawableBottom  图片在文字的结尾 (API14才有,17生效)  </li>\n<li>android:drawablePadding 设置文字与图片之间的距离；  </li>\n</ul>\n<h1 id=\"how\"><a href=\"#how\" class=\"headerlink\" title=\"how\"></a>how</h1><hr>\n<pre><code>&lt;TextView\n         android:id=&quot;@+id/plus_tv&quot;\n         android:layout_width=&quot;400dp&quot;\n    android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;加分&quot;\n     android:textColor=&quot;@android:color/holo_blue_dark&quot;  \n     android:textSize=&quot;36sp&quot;\n     android:textStyle=&quot;bold&quot;\n     android:typeface=&quot;serif&quot;  \n        style=&quot;?buttonBarButtonStyle&quot;\n       android:gravity=&quot;center_horizontal&quot;\n     android:drawableBottom=&quot;@drawable/ic_sentiment_dissatisfied_black_48dp&quot;\n     android:drawablePadding=&quot;20dp&quot;\n     android:drawableTint=&quot;@color/colorAccent&quot;/&gt;  \n</code></pre><h1 id=\"question\"><a href=\"#question\" class=\"headerlink\" title=\"question\"></a>question</h1><hr>\n<h3 id=\"注意的问题\"><a href=\"#注意的问题\" class=\"headerlink\" title=\"注意的问题\"></a>注意的问题</h3><ul>\n<li>gravity属性只对文字起作用  </li>\n<li>drawable在其方向上居中显示；</li>\n<li>当TextView的宽高属性为wrap_content时，宽高取决于文字和图片的较宽或较高者；<h3 id=\"局限性\"><a href=\"#局限性\" class=\"headerlink\" title=\"局限性\"></a>局限性</h3></li>\n<li>当drawable的宽高不确定时；例如，drawable为shape时，shape的宽高取决于控件本身的高度；所以shape无法显示；  </li>\n<li>当需要对drawable进行单独控制时；</li>\n</ul>\n<p>参考资料: <a href=\"http://toughcoder.net/blog/2015/05/20/android-layout-trick-drawable-of-textview/\" target=\"_blank\" rel=\"external\">使用TextView的drawable属性</a></p>\n","excerpt":"","more":"<h1 id=\"what\"><a href=\"#what\" class=\"headerlink\" title=\"what\"></a>what</h1><hr>\n<p>实现Icon+文字在一个视觉元素的需求;</p>\n<h3 id=\"drawable属性\"><a href=\"#drawable属性\" class=\"headerlink\" title=\"drawable属性\"></a>drawable属性</h3><ul>\n<li>android:drawableLeft 图片在文字的左侧  </li>\n<li>android:drawableTop 图片在文字的上方  </li>\n<li>android:drawableRight 图片在文字的右侧  </li>\n<li>android:drawableBottom 图片在文字的下方  </li>\n<li>android:drawableStart 图片在文字的开始处 (API14才有,17生效)  </li>\n<li>android:drawableBottom  图片在文字的结尾 (API14才有,17生效)  </li>\n<li>android:drawablePadding 设置文字与图片之间的距离；  </li>\n</ul>\n<h1 id=\"how\"><a href=\"#how\" class=\"headerlink\" title=\"how\"></a>how</h1><hr>\n<pre><code>&lt;TextView\n         android:id=&quot;@+id/plus_tv&quot;\n         android:layout_width=&quot;400dp&quot;\n    android:layout_height=&quot;wrap_content&quot;\n        android:text=&quot;加分&quot;\n     android:textColor=&quot;@android:color/holo_blue_dark&quot;  \n     android:textSize=&quot;36sp&quot;\n     android:textStyle=&quot;bold&quot;\n     android:typeface=&quot;serif&quot;  \n        style=&quot;?buttonBarButtonStyle&quot;\n       android:gravity=&quot;center_horizontal&quot;\n     android:drawableBottom=&quot;@drawable/ic_sentiment_dissatisfied_black_48dp&quot;\n     android:drawablePadding=&quot;20dp&quot;\n     android:drawableTint=&quot;@color/colorAccent&quot;/&gt;  \n</code></pre><h1 id=\"question\"><a href=\"#question\" class=\"headerlink\" title=\"question\"></a>question</h1><hr>\n<h3 id=\"注意的问题\"><a href=\"#注意的问题\" class=\"headerlink\" title=\"注意的问题\"></a>注意的问题</h3><ul>\n<li>gravity属性只对文字起作用  </li>\n<li>drawable在其方向上居中显示；</li>\n<li>当TextView的宽高属性为wrap_content时，宽高取决于文字和图片的较宽或较高者；<h3 id=\"局限性\"><a href=\"#局限性\" class=\"headerlink\" title=\"局限性\"></a>局限性</h3></li>\n<li>当drawable的宽高不确定时；例如，drawable为shape时，shape的宽高取决于控件本身的高度；所以shape无法显示；  </li>\n<li>当需要对drawable进行单独控制时；</li>\n</ul>\n<p>参考资料: <a href=\"http://toughcoder.net/blog/2015/05/20/android-layout-trick-drawable-of-textview/\">使用TextView的drawable属性</a></p>\n"},{"title":"training-Graphics&Animation-Bitmaps-1","date":"2016-04-01T12:08:13.000Z","_content":"# what\n---\n# Loading large bitmaps efficently\n\n  使用`Bitmap`可以提升UI的交互性，但是使用不当会造成异常`java.lang.OutOfMemory:bitmap size excedds VM budget`;原因如下：  \n1. 移动设备会限制系统资源；系统至少为应用保留`16MB`的内存空间；.[Android Compatibility Definition Document(CDD)](http://source.android.com/compatibility/downloads.html#android-60) <strong>Section 3.7</Strong> Virtual Machine  Compatibility 中规定可以在多种设备下保持应用流畅度的最小运行时内存；应用应该被优化到可以在该最小运行时内存执行；当然，不同的设备会适当的提高这个限制；<br>2. `Bitmap`特别占用内存；例如：Galaxy Nexus 使用2592x1936（五百万像素）照相机；而`Bitmap`的配置为`ARGB_8888`(android2.3以上默认采取该格式，这意味每一个像素需要占用4Bytes)，如果把该图片加载到内存，需要占用`19MB`(2592x1936x4 bytes)的内存；<br>3. app中UI经常需要一次加载多个`Bitmap`，控件`ListView`,`GridView`,`ViewPager`的通常包含多个Bitmap，并且在屏幕的不可见区域仍然有很多Bitmap等着手指一滑把他们加载到可视区域；\n\n<!-----more>\n---\n# How\n---\n很多时候，图片的分辨率要高于手机屏幕的分辨率，为了匹配显示图片的控件，减少内存的开销，我们需要图片的低分辨率版本；<br>\n### Read Bitmap Dimensions and Type<br>\n[BitmapFactory](http://developer.android.com/intl/zh-cn/reference/android/graphics/BitmapFactory.html):根据不同的图片来源创建`Bitmap`对象，包括文件路径，流，字节数组；根据数据源选择合适的解码方法；使用这些方法构造`Bitmap`对象时需要分配内存；因此很容易导致`OOM`。不同的方法有不同的解码选项，我们需要通过`BitmapFactory.Options`来指定解码选项；例如在解码时，当指定`inJustDecodeBounds`属性为`true`来避免分配内存，这样会为`Bitmap`对象返回`null`，但是可以获得`outWidth`,`outHeight`,`outMimeType`；这个技巧可以让我们提前读取图片的尺寸以及类型从而避免构建`Bitmap`对象时的内存分配;<br>\n`BitmapFactory.Options options = new BitmapFactory.Options()`<br>`options.inJustDecodeBounds = true`<br>`BitmapFactory.decodeResources(getResources, R.id.images, options)`<br>`int imageWidth = options.outWidth`<br>`int imageHeight = options.outHeight`<br>`String imageType = options.outMimeType`<br>测试图 分辨率：5760x3240 类型: .jpg<br>测试结果：outWidth = 5760; outHeight=3240 outMimeType = image/jpeg![](http://img1.gamersky.com/image2010/06/20100626h_246/01.jpg)<br>注意：为了避免OOM，在解码之前应先检查它的尺寸；除非你相信提供给你的尺寸数据符合可用的内存要求；<br>\n### Load a Scaled Down Version to memory<br>\n现在已经知道了图片的尺寸，接下来我们可以考虑决定是要将原图还是将修改后的图加载到内存中；我们要考虑以下几个因素：<br>\n1. 评估加载完整图片耗费的内存；<br>\n2. 加载这张图片时的涉及到的其他内存需求<br>\n3. 加载这张图片的`ImageView`或者其他UI控件的尺寸；<br>\n4. 屏幕的分辨率以及尺寸；<br>例如：不应该把一个分辨率1024x768的图片加载到一个分辨率128x96的`ImageView`中<br>为了得到图片的低分辨率版本，我们需要设置`BitmapFactory.Options`中`inSampleSize`的值；例如图片的分辨率2048x1536，`inSampleSize`为4，那得到的位图的分辨率为512x384(假如我们采取的是ARGB_8888格式)。下面这个方法告诉我们怎么计算sample size：<br>\n<pre><code>   \n     public static int calculateInSampleSize (BitmapFactory.Options options,   \n\tint reqWidth, int reqHeight) {\n\tfinal int height = options.outHeight;\n\tfinal int width = options.outWidth;\n\tint inSampleSize = 1;\n\tif (height > reqHeight || width > reqWidth) {\n\t\tfinal int halfWidth = height /2;\n\t\tfinal int halfHeight = width /2;\n\t\twhile (halfWidth / inSampleSize > reqWidth && halfHeight/ inSampleSize > reqHeight) {\n\t\t\t\tinSampleSize *=2；\n         \t}\n\t}\n\treturn inSampleSize;\n      }\n\n</code></pre>\n注意：inSampleSize最终为2的幂，否则会向下取最靠近的2的幂的值；<br><br>\n获取到inSampleSize之后，下面的方法来获得缩小后的图片的低分辨率版本；\n<pre><code>\n\tpublic static Bitmap decodeSampledBimapFromResources (Resources res, int resId, int reqWidth, int reqHeight) {\n\t\tBitmapFactory.Options options = new BitmapFactory.Options();\n\t\toptions.inJustDecodeBounds = true;\n\t\tBitmapFactory.decodeResource(res, resId, options);\n\t\toptions.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);\n\t\toptions.inJustDecodeBounds = false;\n\t\treturn BitmapFactory.decodeResource(res, resId, options);\n\t}\n</code></pre>经过该方法后我们可以将任意大小的图片解码成低分辨率的版本来加载到内存和布局控件中；\n\n\n---\n# question\n---\n1. [手机分辨率与相机像素的问题](http://mobile.163.com/14/0421/08/9QBDVKM7001117A8_all.html)\n2. 当我将上述图片降低分辨率时，我设置的reqWidth = 200, reqHeight =200, 我得到inSampleSize =16，解码后，得到的outWidth = 1080 outHeight = 606 而不是5760/16=360和3240/16=202   why?\n3. 我将ImageView的layout_width = 200px，layout_height=200px；得到的效果不是方形；why？\n<br>\n*****\n# Conclusion\n*****\n 对于高分辨率的图片，为了获得低分辨率的版本，我们应先解码图片的边界，获得图片的尺寸及类型， 然后根据我们希望得到的分辨率获得inSamplseSize,再进行图片的全部解码；\n","source":"_posts/training-Graphics-Animation-Bitmaps-1.md","raw":"---\ntitle: training-Graphics&Animation-Bitmaps-1\ndate: 2016-04-01 20:08:13\ntags: bitmap\ncategories: android\n---\n# what\n---\n# Loading large bitmaps efficently\n\n  使用`Bitmap`可以提升UI的交互性，但是使用不当会造成异常`java.lang.OutOfMemory:bitmap size excedds VM budget`;原因如下：  \n1. 移动设备会限制系统资源；系统至少为应用保留`16MB`的内存空间；.[Android Compatibility Definition Document(CDD)](http://source.android.com/compatibility/downloads.html#android-60) <strong>Section 3.7</Strong> Virtual Machine  Compatibility 中规定可以在多种设备下保持应用流畅度的最小运行时内存；应用应该被优化到可以在该最小运行时内存执行；当然，不同的设备会适当的提高这个限制；<br>2. `Bitmap`特别占用内存；例如：Galaxy Nexus 使用2592x1936（五百万像素）照相机；而`Bitmap`的配置为`ARGB_8888`(android2.3以上默认采取该格式，这意味每一个像素需要占用4Bytes)，如果把该图片加载到内存，需要占用`19MB`(2592x1936x4 bytes)的内存；<br>3. app中UI经常需要一次加载多个`Bitmap`，控件`ListView`,`GridView`,`ViewPager`的通常包含多个Bitmap，并且在屏幕的不可见区域仍然有很多Bitmap等着手指一滑把他们加载到可视区域；\n\n<!-----more>\n---\n# How\n---\n很多时候，图片的分辨率要高于手机屏幕的分辨率，为了匹配显示图片的控件，减少内存的开销，我们需要图片的低分辨率版本；<br>\n### Read Bitmap Dimensions and Type<br>\n[BitmapFactory](http://developer.android.com/intl/zh-cn/reference/android/graphics/BitmapFactory.html):根据不同的图片来源创建`Bitmap`对象，包括文件路径，流，字节数组；根据数据源选择合适的解码方法；使用这些方法构造`Bitmap`对象时需要分配内存；因此很容易导致`OOM`。不同的方法有不同的解码选项，我们需要通过`BitmapFactory.Options`来指定解码选项；例如在解码时，当指定`inJustDecodeBounds`属性为`true`来避免分配内存，这样会为`Bitmap`对象返回`null`，但是可以获得`outWidth`,`outHeight`,`outMimeType`；这个技巧可以让我们提前读取图片的尺寸以及类型从而避免构建`Bitmap`对象时的内存分配;<br>\n`BitmapFactory.Options options = new BitmapFactory.Options()`<br>`options.inJustDecodeBounds = true`<br>`BitmapFactory.decodeResources(getResources, R.id.images, options)`<br>`int imageWidth = options.outWidth`<br>`int imageHeight = options.outHeight`<br>`String imageType = options.outMimeType`<br>测试图 分辨率：5760x3240 类型: .jpg<br>测试结果：outWidth = 5760; outHeight=3240 outMimeType = image/jpeg![](http://img1.gamersky.com/image2010/06/20100626h_246/01.jpg)<br>注意：为了避免OOM，在解码之前应先检查它的尺寸；除非你相信提供给你的尺寸数据符合可用的内存要求；<br>\n### Load a Scaled Down Version to memory<br>\n现在已经知道了图片的尺寸，接下来我们可以考虑决定是要将原图还是将修改后的图加载到内存中；我们要考虑以下几个因素：<br>\n1. 评估加载完整图片耗费的内存；<br>\n2. 加载这张图片时的涉及到的其他内存需求<br>\n3. 加载这张图片的`ImageView`或者其他UI控件的尺寸；<br>\n4. 屏幕的分辨率以及尺寸；<br>例如：不应该把一个分辨率1024x768的图片加载到一个分辨率128x96的`ImageView`中<br>为了得到图片的低分辨率版本，我们需要设置`BitmapFactory.Options`中`inSampleSize`的值；例如图片的分辨率2048x1536，`inSampleSize`为4，那得到的位图的分辨率为512x384(假如我们采取的是ARGB_8888格式)。下面这个方法告诉我们怎么计算sample size：<br>\n<pre><code>   \n     public static int calculateInSampleSize (BitmapFactory.Options options,   \n\tint reqWidth, int reqHeight) {\n\tfinal int height = options.outHeight;\n\tfinal int width = options.outWidth;\n\tint inSampleSize = 1;\n\tif (height > reqHeight || width > reqWidth) {\n\t\tfinal int halfWidth = height /2;\n\t\tfinal int halfHeight = width /2;\n\t\twhile (halfWidth / inSampleSize > reqWidth && halfHeight/ inSampleSize > reqHeight) {\n\t\t\t\tinSampleSize *=2；\n         \t}\n\t}\n\treturn inSampleSize;\n      }\n\n</code></pre>\n注意：inSampleSize最终为2的幂，否则会向下取最靠近的2的幂的值；<br><br>\n获取到inSampleSize之后，下面的方法来获得缩小后的图片的低分辨率版本；\n<pre><code>\n\tpublic static Bitmap decodeSampledBimapFromResources (Resources res, int resId, int reqWidth, int reqHeight) {\n\t\tBitmapFactory.Options options = new BitmapFactory.Options();\n\t\toptions.inJustDecodeBounds = true;\n\t\tBitmapFactory.decodeResource(res, resId, options);\n\t\toptions.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);\n\t\toptions.inJustDecodeBounds = false;\n\t\treturn BitmapFactory.decodeResource(res, resId, options);\n\t}\n</code></pre>经过该方法后我们可以将任意大小的图片解码成低分辨率的版本来加载到内存和布局控件中；\n\n\n---\n# question\n---\n1. [手机分辨率与相机像素的问题](http://mobile.163.com/14/0421/08/9QBDVKM7001117A8_all.html)\n2. 当我将上述图片降低分辨率时，我设置的reqWidth = 200, reqHeight =200, 我得到inSampleSize =16，解码后，得到的outWidth = 1080 outHeight = 606 而不是5760/16=360和3240/16=202   why?\n3. 我将ImageView的layout_width = 200px，layout_height=200px；得到的效果不是方形；why？\n<br>\n*****\n# Conclusion\n*****\n 对于高分辨率的图片，为了获得低分辨率的版本，我们应先解码图片的边界，获得图片的尺寸及类型， 然后根据我们希望得到的分辨率获得inSamplseSize,再进行图片的全部解码；\n","slug":"training-Graphics-Animation-Bitmaps-1","published":1,"updated":"2017-03-26T04:05:44.015Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0qbxs2m0001ysx8px1stpgf","content":"<h1 id=\"what\"><a href=\"#what\" class=\"headerlink\" title=\"what\"></a>what</h1><hr>\n<h1 id=\"Loading-large-bitmaps-efficently\"><a href=\"#Loading-large-bitmaps-efficently\" class=\"headerlink\" title=\"Loading large bitmaps efficently\"></a>Loading large bitmaps efficently</h1><p>  使用<code>Bitmap</code>可以提升UI的交互性，但是使用不当会造成异常<code>java.lang.OutOfMemory:bitmap size excedds VM budget</code>;原因如下：  </p>\n<ol>\n<li>移动设备会限制系统资源；系统至少为应用保留<code>16MB</code>的内存空间；.<a href=\"http://source.android.com/compatibility/downloads.html#android-60\" target=\"_blank\" rel=\"external\">Android Compatibility Definition Document(CDD)</a> <strong>Section 3.7</strong> Virtual Machine  Compatibility 中规定可以在多种设备下保持应用流畅度的最小运行时内存；应用应该被优化到可以在该最小运行时内存执行；当然，不同的设备会适当的提高这个限制；<br>2. <code>Bitmap</code>特别占用内存；例如：Galaxy Nexus 使用2592x1936（五百万像素）照相机；而<code>Bitmap</code>的配置为<code>ARGB_8888</code>(android2.3以上默认采取该格式，这意味每一个像素需要占用4Bytes)，如果把该图片加载到内存，需要占用<code>19MB</code>(2592x1936x4 bytes)的内存；<br>3. app中UI经常需要一次加载多个<code>Bitmap</code>，控件<code>ListView</code>,<code>GridView</code>,<code>ViewPager</code>的通常包含多个Bitmap，并且在屏幕的不可见区域仍然有很多Bitmap等着手指一滑把他们加载到可视区域；</li>\n</ol>\n<h2 id=\"lt-—–more-gt\"><a href=\"#lt-—–more-gt\" class=\"headerlink\" title=\"&lt;!—–more&gt;\"></a>&lt;!—–more&gt;</h2><h1 id=\"How\"><a href=\"#How\" class=\"headerlink\" title=\"How\"></a>How</h1><hr>\n<p>很多时候，图片的分辨率要高于手机屏幕的分辨率，为了匹配显示图片的控件，减少内存的开销，我们需要图片的低分辨率版本；<br></p>\n<h3 id=\"Read-Bitmap-Dimensions-and-Type\"><a href=\"#Read-Bitmap-Dimensions-and-Type\" class=\"headerlink\" title=\"Read Bitmap Dimensions and Type\"></a>Read Bitmap Dimensions and Type<br></h3><p><a href=\"http://developer.android.com/intl/zh-cn/reference/android/graphics/BitmapFactory.html\" target=\"_blank\" rel=\"external\">BitmapFactory</a>:根据不同的图片来源创建<code>Bitmap</code>对象，包括文件路径，流，字节数组；根据数据源选择合适的解码方法；使用这些方法构造<code>Bitmap</code>对象时需要分配内存；因此很容易导致<code>OOM</code>。不同的方法有不同的解码选项，我们需要通过<code>BitmapFactory.Options</code>来指定解码选项；例如在解码时，当指定<code>inJustDecodeBounds</code>属性为<code>true</code>来避免分配内存，这样会为<code>Bitmap</code>对象返回<code>null</code>，但是可以获得<code>outWidth</code>,<code>outHeight</code>,<code>outMimeType</code>；这个技巧可以让我们提前读取图片的尺寸以及类型从而避免构建<code>Bitmap</code>对象时的内存分配;<br><br><code>BitmapFactory.Options options = new BitmapFactory.Options()</code><br><code>options.inJustDecodeBounds = true</code><br><code>BitmapFactory.decodeResources(getResources, R.id.images, options)</code><br><code>int imageWidth = options.outWidth</code><br><code>int imageHeight = options.outHeight</code><br><code>String imageType = options.outMimeType</code><br>测试图 分辨率：5760x3240 类型: .jpg<br>测试结果：outWidth = 5760; outHeight=3240 outMimeType = image/jpeg<img src=\"http://img1.gamersky.com/image2010/06/20100626h_246/01.jpg\" alt=\"\"><br>注意：为了避免OOM，在解码之前应先检查它的尺寸；除非你相信提供给你的尺寸数据符合可用的内存要求；<br></p>\n<h3 id=\"Load-a-Scaled-Down-Version-to-memory\"><a href=\"#Load-a-Scaled-Down-Version-to-memory\" class=\"headerlink\" title=\"Load a Scaled Down Version to memory\"></a>Load a Scaled Down Version to memory<br></h3><p>现在已经知道了图片的尺寸，接下来我们可以考虑决定是要将原图还是将修改后的图加载到内存中；我们要考虑以下几个因素：<br></p>\n<ol>\n<li>评估加载完整图片耗费的内存；<br></li>\n<li>加载这张图片时的涉及到的其他内存需求<br></li>\n<li>加载这张图片的<code>ImageView</code>或者其他UI控件的尺寸；<br></li>\n<li>屏幕的分辨率以及尺寸；<br>例如：不应该把一个分辨率1024x768的图片加载到一个分辨率128x96的<code>ImageView</code>中<br>为了得到图片的低分辨率版本，我们需要设置<code>BitmapFactory.Options</code>中<code>inSampleSize</code>的值；例如图片的分辨率2048x1536，<code>inSampleSize</code>为4，那得到的位图的分辨率为512x384(假如我们采取的是ARGB_8888格式)。下面这个方法告诉我们怎么计算sample size：<br><br><pre><code><br>  public static int calculateInSampleSize (BitmapFactory.Options options,<br> int reqWidth, int reqHeight) {<br> final int height = options.outHeight;<br> final int width = options.outWidth;<br> int inSampleSize = 1;<br> if (height &gt; reqHeight || width &gt; reqWidth) {<pre><code>final int halfWidth = height /2;\nfinal int halfHeight = width /2;\nwhile (halfWidth / inSampleSize &gt; reqWidth &amp;&amp; halfHeight/ inSampleSize &gt; reqHeight) {\n        inSampleSize *=2；\n     }\n</code></pre> }<br> return inSampleSize;<br>   }</code></pre></li>\n</ol>\n<p><br>注意：inSampleSize最终为2的幂，否则会向下取最靠近的2的幂的值；<br><br><br>获取到inSampleSize之后，下面的方法来获得缩小后的图片的低分辨率版本；</p>\n<p><pre><code><br>    public static Bitmap decodeSampledBimapFromResources (Resources res, int resId, int reqWidth, int reqHeight) {<br>        BitmapFactory.Options options = new BitmapFactory.Options();<br>        options.inJustDecodeBounds = true;<br>        BitmapFactory.decodeResource(res, resId, options);<br>        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);<br>        options.inJustDecodeBounds = false;<br>        return BitmapFactory.decodeResource(res, resId, options);<br>    }<br></code></pre>经过该方法后我们可以将任意大小的图片解码成低分辨率的版本来加载到内存和布局控件中；</p>\n<hr>\n<h1 id=\"question\"><a href=\"#question\" class=\"headerlink\" title=\"question\"></a>question</h1><hr>\n<ol>\n<li><a href=\"http://mobile.163.com/14/0421/08/9QBDVKM7001117A8_all.html\" target=\"_blank\" rel=\"external\">手机分辨率与相机像素的问题</a></li>\n<li>当我将上述图片降低分辨率时，我设置的reqWidth = 200, reqHeight =200, 我得到inSampleSize =16，解码后，得到的outWidth = 1080 outHeight = 606 而不是5760/16=360和3240/16=202   why?</li>\n<li>我将ImageView的layout_width = 200px，layout_height=200px；得到的效果不是方形；why？<br><br></li>\n</ol>\n<hr>\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><hr>\n<p> 对于高分辨率的图片，为了获得低分辨率的版本，我们应先解码图片的边界，获得图片的尺寸及类型， 然后根据我们希望得到的分辨率获得inSamplseSize,再进行图片的全部解码；</p>\n","excerpt":"","more":"<h1 id=\"what\"><a href=\"#what\" class=\"headerlink\" title=\"what\"></a>what</h1><hr>\n<h1 id=\"Loading-large-bitmaps-efficently\"><a href=\"#Loading-large-bitmaps-efficently\" class=\"headerlink\" title=\"Loading large bitmaps efficently\"></a>Loading large bitmaps efficently</h1><p>  使用<code>Bitmap</code>可以提升UI的交互性，但是使用不当会造成异常<code>java.lang.OutOfMemory:bitmap size excedds VM budget</code>;原因如下：  </p>\n<ol>\n<li>移动设备会限制系统资源；系统至少为应用保留<code>16MB</code>的内存空间；.<a href=\"http://source.android.com/compatibility/downloads.html#android-60\">Android Compatibility Definition Document(CDD)</a> <strong>Section 3.7</Strong> Virtual Machine  Compatibility 中规定可以在多种设备下保持应用流畅度的最小运行时内存；应用应该被优化到可以在该最小运行时内存执行；当然，不同的设备会适当的提高这个限制；<br>2. <code>Bitmap</code>特别占用内存；例如：Galaxy Nexus 使用2592x1936（五百万像素）照相机；而<code>Bitmap</code>的配置为<code>ARGB_8888</code>(android2.3以上默认采取该格式，这意味每一个像素需要占用4Bytes)，如果把该图片加载到内存，需要占用<code>19MB</code>(2592x1936x4 bytes)的内存；<br>3. app中UI经常需要一次加载多个<code>Bitmap</code>，控件<code>ListView</code>,<code>GridView</code>,<code>ViewPager</code>的通常包含多个Bitmap，并且在屏幕的不可见区域仍然有很多Bitmap等着手指一滑把他们加载到可视区域；</li>\n</ol>\n<h2 id=\"lt-—–more-gt\"><a href=\"#lt-—–more-gt\" class=\"headerlink\" title=\"&lt;!—–more&gt;\"></a>&lt;!—–more&gt;</h2><h1 id=\"How\"><a href=\"#How\" class=\"headerlink\" title=\"How\"></a>How</h1><hr>\n<p>很多时候，图片的分辨率要高于手机屏幕的分辨率，为了匹配显示图片的控件，减少内存的开销，我们需要图片的低分辨率版本；<br></p>\n<h3 id=\"Read-Bitmap-Dimensions-and-Type\"><a href=\"#Read-Bitmap-Dimensions-and-Type\" class=\"headerlink\" title=\"Read Bitmap Dimensions and Type\"></a>Read Bitmap Dimensions and Type<br></h3><p><a href=\"http://developer.android.com/intl/zh-cn/reference/android/graphics/BitmapFactory.html\">BitmapFactory</a>:根据不同的图片来源创建<code>Bitmap</code>对象，包括文件路径，流，字节数组；根据数据源选择合适的解码方法；使用这些方法构造<code>Bitmap</code>对象时需要分配内存；因此很容易导致<code>OOM</code>。不同的方法有不同的解码选项，我们需要通过<code>BitmapFactory.Options</code>来指定解码选项；例如在解码时，当指定<code>inJustDecodeBounds</code>属性为<code>true</code>来避免分配内存，这样会为<code>Bitmap</code>对象返回<code>null</code>，但是可以获得<code>outWidth</code>,<code>outHeight</code>,<code>outMimeType</code>；这个技巧可以让我们提前读取图片的尺寸以及类型从而避免构建<code>Bitmap</code>对象时的内存分配;<br><br><code>BitmapFactory.Options options = new BitmapFactory.Options()</code><br><code>options.inJustDecodeBounds = true</code><br><code>BitmapFactory.decodeResources(getResources, R.id.images, options)</code><br><code>int imageWidth = options.outWidth</code><br><code>int imageHeight = options.outHeight</code><br><code>String imageType = options.outMimeType</code><br>测试图 分辨率：5760x3240 类型: .jpg<br>测试结果：outWidth = 5760; outHeight=3240 outMimeType = image/jpeg<img src=\"http://img1.gamersky.com/image2010/06/20100626h_246/01.jpg\" alt=\"\"><br>注意：为了避免OOM，在解码之前应先检查它的尺寸；除非你相信提供给你的尺寸数据符合可用的内存要求；<br></p>\n<h3 id=\"Load-a-Scaled-Down-Version-to-memory\"><a href=\"#Load-a-Scaled-Down-Version-to-memory\" class=\"headerlink\" title=\"Load a Scaled Down Version to memory\"></a>Load a Scaled Down Version to memory<br></h3><p>现在已经知道了图片的尺寸，接下来我们可以考虑决定是要将原图还是将修改后的图加载到内存中；我们要考虑以下几个因素：<br></p>\n<ol>\n<li>评估加载完整图片耗费的内存；<br></li>\n<li>加载这张图片时的涉及到的其他内存需求<br></li>\n<li>加载这张图片的<code>ImageView</code>或者其他UI控件的尺寸；<br></li>\n<li>屏幕的分辨率以及尺寸；<br>例如：不应该把一个分辨率1024x768的图片加载到一个分辨率128x96的<code>ImageView</code>中<br>为了得到图片的低分辨率版本，我们需要设置<code>BitmapFactory.Options</code>中<code>inSampleSize</code>的值；例如图片的分辨率2048x1536，<code>inSampleSize</code>为4，那得到的位图的分辨率为512x384(假如我们采取的是ARGB_8888格式)。下面这个方法告诉我们怎么计算sample size：<br><br><pre><code><br>  public static int calculateInSampleSize (BitmapFactory.Options options,<br> int reqWidth, int reqHeight) {<br> final int height = options.outHeight;<br> final int width = options.outWidth;<br> int inSampleSize = 1;<br> if (height &gt; reqHeight || width &gt; reqWidth) {<pre><code>final int halfWidth = height /2;\nfinal int halfHeight = width /2;\nwhile (halfWidth / inSampleSize &gt; reqWidth &amp;&amp; halfHeight/ inSampleSize &gt; reqHeight) {\n        inSampleSize *=2；\n     }\n</code></pre> }<br> return inSampleSize;<br>   }</li>\n</ol>\n<p></code></pre><br>注意：inSampleSize最终为2的幂，否则会向下取最靠近的2的幂的值；<br><br><br>获取到inSampleSize之后，下面的方法来获得缩小后的图片的低分辨率版本；</p>\n<p><pre><code><br>    public static Bitmap decodeSampledBimapFromResources (Resources res, int resId, int reqWidth, int reqHeight) {<br>        BitmapFactory.Options options = new BitmapFactory.Options();<br>        options.inJustDecodeBounds = true;<br>        BitmapFactory.decodeResource(res, resId, options);<br>        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);<br>        options.inJustDecodeBounds = false;<br>        return BitmapFactory.decodeResource(res, resId, options);<br>    }<br></code></pre>经过该方法后我们可以将任意大小的图片解码成低分辨率的版本来加载到内存和布局控件中；</p>\n<hr>\n<h1 id=\"question\"><a href=\"#question\" class=\"headerlink\" title=\"question\"></a>question</h1><hr>\n<ol>\n<li><a href=\"http://mobile.163.com/14/0421/08/9QBDVKM7001117A8_all.html\">手机分辨率与相机像素的问题</a></li>\n<li>当我将上述图片降低分辨率时，我设置的reqWidth = 200, reqHeight =200, 我得到inSampleSize =16，解码后，得到的outWidth = 1080 outHeight = 606 而不是5760/16=360和3240/16=202   why?</li>\n<li>我将ImageView的layout_width = 200px，layout_height=200px；得到的效果不是方形；why？<br><br></li>\n</ol>\n<hr>\n<h1 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h1><hr>\n<p> 对于高分辨率的图片，为了获得低分辨率的版本，我们应先解码图片的边界，获得图片的尺寸及类型， 然后根据我们希望得到的分辨率获得inSamplseSize,再进行图片的全部解码；</p>\n"},{"title":"博客搭建 : hexo + GitHub + 多机同步","date":"2017-03-26T04:50:02.000Z","_content":"# 博客搭建 : hexo + GitHub + 多机同步  \n\n记录 [hexo](hexo_url) 博客搭建及如何实现多机同步；\n\n ## [安装 Git](git_url)   \n\n安装完后，打开 Git bash , 配置用户名和邮箱\n\n ```   \n  $ git config --global user.name \"William\"\n  $ git config --global user.email William@example.com\n  输入 git --version 显示版本号则安装成功\n ```\n ## [安装 Node.js](node_url)  \n\n  输入 node -v 和 npm -v，如果显示版本号则安装成功；\n\n ## [GitHub 仓库创建](github_url)\n\n   1. 创建仓库，命名为 \"GitHub Username\".github.io; 注意 GitHub Username 必须为 GitHub 的用户名；\n\n   2. 建好之后，该仓库默认有个分支 master (用来存放生成的静态网页), 再创建一个分支命名为 hexo (用来存放生成网站的原始文件)，并将 hexo 分支设置为 默认分支  \n\n   3. 使用 `git clone git@github.com:username/username.github.io.git` 拷贝仓库  \n\n   4. 使用 Git bash 进入本地仓库 username.github.io.git(此时分支应为 hexo )， 依次执行 `npm install hexo`,`hexo init`,`npm install`,`npm install hexo-deployer-git`  \n\n   5. 修改 `_congig.yml` 的 deploy 参数，分支应为 master ,表示生成的静态网页文件将被推送到 master 分支上；\n\n   ```\n  deploy:\n   type: git\n   repo: https://github.com/username/username.github.io.git\n   branch: master\n\n   ```  \n\n   6. 执行 `git add .`,`git commit -m \"提交信息\"`,`git push origin hexo`\n\n   7. 执行 `hexo g -d` 将生成的网站部署到 GitHub 上；\n\n## 平时维护\n  1. 本地添加博客或修改主题后，执行 `git add .`,`git commit -m \"提交信息\"`,`git push origin hexo`将修改推送到远程分支 hexo 上；\n  2. 使用 hexo g 生成静态文件， hexo s 开启服务器预览 ，浏览器输入 http://localhost:4000 即可预览；使用 hexo d 将生成的静态文件部署到 master 分支上；\n\n## 多机维护\n  1. 在另一台电脑上，将未安装的软件先安装，之后执行 `GitHub 仓库创建` 的  2，3步（第三步不需要执行 hexo init 命令）\n\n## 遇到的问题\n  1. `Error: bash: /dev/tty: No such device or address`， 因为我在 cmd 去进行上述操作，该成 Git bash 之后就没有该问题了；\n\n  2. `hexo command not found`, 使用 `npm install -g hexo` 安装 hexo\n\n  3. 第二台电脑同步部署完成之后，打开网站空白，原因是主题文件家为空，在 `_congif.yml` 中指定的主题不存在. 解决方案,重新 clone 一份\n\n\n## 最后  \n\n 1. 推荐使用 [atom](atom_url) 编辑 md 文件；\n\n\n  [git_url] : (https://www.git-scm.com/download)  \n\n  [hexo_url] : (https://hexo.io/zh-cn/docs/index.html)\n\n  [github_url] : (https://github.com)  \n\n  [node_url] : (https://nodejs.org/en)\n\n  [atom_url] : (https://atom.io)  \n","source":"_posts/博客搭建-hexo-Github-多机同步.md","raw":"---\ntitle: '博客搭建 : hexo + GitHub + 多机同步'\ndate: 2017-03-26 12:50:02\ntags: hexo\ncategories: 博客\n\n---\n# 博客搭建 : hexo + GitHub + 多机同步  \n\n记录 [hexo](hexo_url) 博客搭建及如何实现多机同步；\n\n ## [安装 Git](git_url)   \n\n安装完后，打开 Git bash , 配置用户名和邮箱\n\n ```   \n  $ git config --global user.name \"William\"\n  $ git config --global user.email William@example.com\n  输入 git --version 显示版本号则安装成功\n ```\n ## [安装 Node.js](node_url)  \n\n  输入 node -v 和 npm -v，如果显示版本号则安装成功；\n\n ## [GitHub 仓库创建](github_url)\n\n   1. 创建仓库，命名为 \"GitHub Username\".github.io; 注意 GitHub Username 必须为 GitHub 的用户名；\n\n   2. 建好之后，该仓库默认有个分支 master (用来存放生成的静态网页), 再创建一个分支命名为 hexo (用来存放生成网站的原始文件)，并将 hexo 分支设置为 默认分支  \n\n   3. 使用 `git clone git@github.com:username/username.github.io.git` 拷贝仓库  \n\n   4. 使用 Git bash 进入本地仓库 username.github.io.git(此时分支应为 hexo )， 依次执行 `npm install hexo`,`hexo init`,`npm install`,`npm install hexo-deployer-git`  \n\n   5. 修改 `_congig.yml` 的 deploy 参数，分支应为 master ,表示生成的静态网页文件将被推送到 master 分支上；\n\n   ```\n  deploy:\n   type: git\n   repo: https://github.com/username/username.github.io.git\n   branch: master\n\n   ```  \n\n   6. 执行 `git add .`,`git commit -m \"提交信息\"`,`git push origin hexo`\n\n   7. 执行 `hexo g -d` 将生成的网站部署到 GitHub 上；\n\n## 平时维护\n  1. 本地添加博客或修改主题后，执行 `git add .`,`git commit -m \"提交信息\"`,`git push origin hexo`将修改推送到远程分支 hexo 上；\n  2. 使用 hexo g 生成静态文件， hexo s 开启服务器预览 ，浏览器输入 http://localhost:4000 即可预览；使用 hexo d 将生成的静态文件部署到 master 分支上；\n\n## 多机维护\n  1. 在另一台电脑上，将未安装的软件先安装，之后执行 `GitHub 仓库创建` 的  2，3步（第三步不需要执行 hexo init 命令）\n\n## 遇到的问题\n  1. `Error: bash: /dev/tty: No such device or address`， 因为我在 cmd 去进行上述操作，该成 Git bash 之后就没有该问题了；\n\n  2. `hexo command not found`, 使用 `npm install -g hexo` 安装 hexo\n\n  3. 第二台电脑同步部署完成之后，打开网站空白，原因是主题文件家为空，在 `_congif.yml` 中指定的主题不存在. 解决方案,重新 clone 一份\n\n\n## 最后  \n\n 1. 推荐使用 [atom](atom_url) 编辑 md 文件；\n\n\n  [git_url] : (https://www.git-scm.com/download)  \n\n  [hexo_url] : (https://hexo.io/zh-cn/docs/index.html)\n\n  [github_url] : (https://github.com)  \n\n  [node_url] : (https://nodejs.org/en)\n\n  [atom_url] : (https://atom.io)  \n","slug":"博客搭建-hexo-Github-多机同步","published":1,"updated":"2017-03-26T06:53:57.096Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0qbxs2v0004ysx88yov90vp","content":"<h1 id=\"博客搭建-hexo-GitHub-多机同步\"><a href=\"#博客搭建-hexo-GitHub-多机同步\" class=\"headerlink\" title=\"博客搭建 : hexo + GitHub + 多机同步\"></a>博客搭建 : hexo + GitHub + 多机同步</h1><p>记录 <a href=\"hexo_url\">hexo</a> 博客搭建及如何实现多机同步；</p>\n<h2 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a><a href=\"git_url\">安装 Git</a></h2><p>安装完后，打开 Git bash , 配置用户名和邮箱</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global user.name &quot;William&quot;</div><div class=\"line\">$ git config --global user.email William@example.com</div><div class=\"line\">输入 git --version 显示版本号则安装成功</div></pre></td></tr></table></figure>\n<h2 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a><a href=\"node_url\">安装 Node.js</a></h2><p>  输入 node -v 和 npm -v，如果显示版本号则安装成功；</p>\n<h2 id=\"GitHub-仓库创建\"><a href=\"#GitHub-仓库创建\" class=\"headerlink\" title=\"GitHub 仓库创建\"></a><a href=\"github_url\">GitHub 仓库创建</a></h2><ol>\n<li><p>创建仓库，命名为 “GitHub Username”.github.io; 注意 GitHub Username 必须为 GitHub 的用户名；</p>\n</li>\n<li><p>建好之后，该仓库默认有个分支 master (用来存放生成的静态网页), 再创建一个分支命名为 hexo (用来存放生成网站的原始文件)，并将 hexo 分支设置为 默认分支  </p>\n</li>\n<li><p>使用 <code>git clone git@github.com:username/username.github.io.git</code> 拷贝仓库  </p>\n</li>\n<li><p>使用 Git bash 进入本地仓库 username.github.io.git(此时分支应为 hexo )， 依次执行 <code>npm install hexo</code>,<code>hexo init</code>,<code>npm install</code>,<code>npm install hexo-deployer-git</code>  </p>\n</li>\n<li><p>修改 <code>_congig.yml</code> 的 deploy 参数，分支应为 master ,表示生成的静态网页文件将被推送到 master 分支上；</p>\n<pre><code>deploy:\ntype: git\nrepo: https://github.com/username/username.github.io.git\nbranch: master\n</code></pre></li>\n<li><p>执行 <code>git add .</code>,<code>git commit -m &quot;提交信息&quot;</code>,<code>git push origin hexo</code></p>\n</li>\n<li><p>执行 <code>hexo g -d</code> 将生成的网站部署到 GitHub 上；</p>\n</li>\n</ol>\n<h2 id=\"平时维护\"><a href=\"#平时维护\" class=\"headerlink\" title=\"平时维护\"></a>平时维护</h2><ol>\n<li>本地添加博客或修改主题后，执行 <code>git add .</code>,<code>git commit -m &quot;提交信息&quot;</code>,<code>git push origin hexo</code>将修改推送到远程分支 hexo 上；</li>\n<li>使用 hexo g 生成静态文件， hexo s 开启服务器预览 ，浏览器输入 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> 即可预览；使用 hexo d 将生成的静态文件部署到 master 分支上；</li>\n</ol>\n<h2 id=\"多机维护\"><a href=\"#多机维护\" class=\"headerlink\" title=\"多机维护\"></a>多机维护</h2><ol>\n<li>在另一台电脑上，将未安装的软件先安装，之后执行 <code>GitHub 仓库创建</code> 的  2，3步（第三步不需要执行 hexo init 命令）</li>\n</ol>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><ol>\n<li><p><code>Error: bash: /dev/tty: No such device or address</code>， 因为我在 cmd 去进行上述操作，该成 Git bash 之后就没有该问题了；</p>\n</li>\n<li><p><code>hexo command not found</code>, 使用 <code>npm install -g hexo</code> 安装 hexo</p>\n</li>\n<li><p>第二台电脑同步部署完成之后，打开网站空白，原因是主题文件家为空，在 <code>_congif.yml</code> 中指定的主题不存在. 解决方案,重新 clone 一份</p>\n</li>\n</ol>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><ol>\n<li>推荐使用 <a href=\"atom_url\">atom</a> 编辑 md 文件；</li>\n</ol>\n<p>  [git_url] : (<a href=\"https://www.git-scm.com/download\" target=\"_blank\" rel=\"external\">https://www.git-scm.com/download</a>)  </p>\n<p>  [hexo_url] : (<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/index.html</a>)</p>\n<p>  [github_url] : (<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">https://github.com</a>)  </p>\n<p>  [node_url] : (<a href=\"https://nodejs.org/en\" target=\"_blank\" rel=\"external\">https://nodejs.org/en</a>)</p>\n<p>  [atom_url] : (<a href=\"https://atom.io\" target=\"_blank\" rel=\"external\">https://atom.io</a>)  </p>\n","excerpt":"","more":"<h1 id=\"博客搭建-hexo-GitHub-多机同步\"><a href=\"#博客搭建-hexo-GitHub-多机同步\" class=\"headerlink\" title=\"博客搭建 : hexo + GitHub + 多机同步\"></a>博客搭建 : hexo + GitHub + 多机同步</h1><p>记录 <a href=\"hexo_url\">hexo</a> 博客搭建及如何实现多机同步；</p>\n<h2 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a><a href=\"git_url\">安装 Git</a></h2><p>安装完后，打开 Git bash , 配置用户名和邮箱</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global user.name &quot;William&quot;</div><div class=\"line\">$ git config --global user.email William@example.com</div><div class=\"line\">输入 git --version 显示版本号则安装成功</div></pre></td></tr></table></figure>\n<h2 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a><a href=\"node_url\">安装 Node.js</a></h2><p>  输入 node -v 和 npm -v，如果显示版本号则安装成功；</p>\n<h2 id=\"GitHub-仓库创建\"><a href=\"#GitHub-仓库创建\" class=\"headerlink\" title=\"GitHub 仓库创建\"></a><a href=\"github_url\">GitHub 仓库创建</a></h2><ol>\n<li><p>创建仓库，命名为 “GitHub Username”.github.io; 注意 GitHub Username 必须为 GitHub 的用户名；</p>\n</li>\n<li><p>建好之后，该仓库默认有个分支 master (用来存放生成的静态网页), 再创建一个分支命名为 hexo (用来存放生成网站的原始文件)，并将 hexo 分支设置为 默认分支  </p>\n</li>\n<li><p>使用 <code>git clone git@github.com:username/username.github.io.git</code> 拷贝仓库  </p>\n</li>\n<li><p>使用 Git bash 进入本地仓库 username.github.io.git(此时分支应为 hexo )， 依次执行 <code>npm install hexo</code>,<code>hexo init</code>,<code>npm install</code>,<code>npm install hexo-deployer-git</code>  </p>\n</li>\n<li><p>修改 <code>_congig.yml</code> 的 deploy 参数，分支应为 master ,表示生成的静态网页文件将被推送到 master 分支上；</p>\n<pre><code>deploy:\ntype: git\nrepo: https://github.com/username/username.github.io.git\nbranch: master\n</code></pre></li>\n<li><p>执行 <code>git add .</code>,<code>git commit -m &quot;提交信息&quot;</code>,<code>git push origin hexo</code></p>\n</li>\n<li><p>执行 <code>hexo g -d</code> 将生成的网站部署到 GitHub 上；</p>\n</li>\n</ol>\n<h2 id=\"平时维护\"><a href=\"#平时维护\" class=\"headerlink\" title=\"平时维护\"></a>平时维护</h2><ol>\n<li>本地添加博客或修改主题后，执行 <code>git add .</code>,<code>git commit -m &quot;提交信息&quot;</code>,<code>git push origin hexo</code>将修改推送到远程分支 hexo 上；</li>\n<li>使用 hexo g 生成静态文件， hexo s 开启服务器预览 ，浏览器输入 <a href=\"http://localhost:4000\">http://localhost:4000</a> 即可预览；使用 hexo d 将生成的静态文件部署到 master 分支上；</li>\n</ol>\n<h2 id=\"多机维护\"><a href=\"#多机维护\" class=\"headerlink\" title=\"多机维护\"></a>多机维护</h2><ol>\n<li>在另一台电脑上，将未安装的软件先安装，之后执行 <code>GitHub 仓库创建</code> 的  2，3步（第三步不需要执行 hexo init 命令）</li>\n</ol>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><ol>\n<li><p><code>Error: bash: /dev/tty: No such device or address</code>， 因为我在 cmd 去进行上述操作，该成 Git bash 之后就没有该问题了；</p>\n</li>\n<li><p><code>hexo command not found</code>, 使用 <code>npm install -g hexo</code> 安装 hexo</p>\n</li>\n<li><p>第二台电脑同步部署完成之后，打开网站空白，原因是主题文件家为空，在 <code>_congif.yml</code> 中指定的主题不存在. 解决方案,重新 clone 一份</p>\n</li>\n</ol>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><ol>\n<li>推荐使用 <a href=\"atom_url\">atom</a> 编辑 md 文件；</li>\n</ol>\n<p>  [git_url] : (<a href=\"https://www.git-scm.com/download\">https://www.git-scm.com/download</a>)  </p>\n<p>  [hexo_url] : (<a href=\"https://hexo.io/zh-cn/docs/index.html\">https://hexo.io/zh-cn/docs/index.html</a>)</p>\n<p>  [github_url] : (<a href=\"https://github.com\">https://github.com</a>)  </p>\n<p>  [node_url] : (<a href=\"https://nodejs.org/en\">https://nodejs.org/en</a>)</p>\n<p>  [atom_url] : (<a href=\"https://atom.io\">https://atom.io</a>)  </p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj0qbxs2i0000ysx8rqm4pdbc","category_id":"cj0qbxs2q0002ysx8o8bma2np","_id":"cj0qbxs310008ysx8dlzi7zrw"},{"post_id":"cj0qbxs2m0001ysx8px1stpgf","category_id":"cj0qbxs2z0005ysx8i0tu4kso","_id":"cj0qbxs34000cysx849gghzl7"},{"post_id":"cj0qbxs2v0004ysx88yov90vp","category_id":"cj0qbxs320009ysx819ttiuon","_id":"cj0qbxs35000eysx8ipb1033e"}],"PostTag":[{"post_id":"cj0qbxs2i0000ysx8rqm4pdbc","tag_id":"cj0qbxs2u0003ysx8yzfn0wg0","_id":"cj0qbxs300007ysx876fadfiw"},{"post_id":"cj0qbxs2m0001ysx8px1stpgf","tag_id":"cj0qbxs2z0006ysx88u5in9dx","_id":"cj0qbxs34000bysx8ld8vostn"},{"post_id":"cj0qbxs2v0004ysx88yov90vp","tag_id":"cj0qbxs33000aysx8f04bpq1p","_id":"cj0qbxs35000dysx8jhuagky8"}],"Tag":[{"name":"android布局技巧 TextView","_id":"cj0qbxs2u0003ysx8yzfn0wg0"},{"name":"bitmap","_id":"cj0qbxs2z0006ysx88u5in9dx"},{"name":"hexo","_id":"cj0qbxs33000aysx8f04bpq1p"}]}}